<% let g_addr = common.ghomeSpeakers %>
<div class="container">
  <div class="row">
    <div class="col-md-6 col-12">
		<p>
			<button id="clean_wav" class="btn btn-primary w-100">たまったおんせいファイルをしょうきょする</button>
		</p>
	</div>
    <div class="col-md-6 col-12">
		<p>
			<button id="update_reboot_webserver" class="btn btn-primary w-100">ウェブサーバをアップデートしてさいきどうする</button>
		</p>
	</div>
    <div class="col-md-6 col-12 py-10">
		<p>
			<button id="reboot_webserver" class="btn btn-primary w-100">ウェブサーバをさいきどうする</button>
		</p>
	</div>
    <div class="col-md-6 col-12">
		<p>
			<button id="show_log" class="btn btn-primary w-100">ログをひょうじする</button>
		</p>
	</div>
	<div class="col-md-6 col-12">
		<p>
			<button id="show_err_log" class="btn btn-primary w-100">エラーログをひょうじする</button>
		</p>
	</div>
    <div class="col-md-6 col-12">
		<p>
			<button id="show_version" class="btn btn-primary w-100">バージョンをひょうじする</button>
		</p>
	</div>
</div>


<p>
	<P id="resXmlHttpRequestObj"></P>
</p>

<script type="text/javascript">

	document.getElementById('clean_wav').onclick = function() {
		post_command({
			alert_text : 'おんせいファイルをしょうきょします。',
			mode : 'clean_wav',
			short_return : true
		});
	}

	document.getElementById('update_reboot_webserver').onclick = function(){
		post_command({
			alert_text : 'ウェブサーバをアップデートしてさいきどうします。',
			mode : 'update_reboot',
		});
	}

	document.getElementById('reboot_webserver').onclick = function(){
		post_command({
			alert_text : 'ウェブサーバをさいきどうします。',
			mode : 'reboot',
		});
	}

	document.getElementById('show_log').onclick = function(){
		post_command({
			alert_text : '標準出力ログを表示します。',
			mode : 'system_command',
			data: {
				command : 'cat out.log',
				log_output_off: 'true',
			}
		});
	}

	document.getElementById('show_err_log').onclick = function(){
		post_command({
			alert_text : 'エラーログを表示します。',
			mode : 'system_command',
			data: {
				command : 'cat error.log',
				log_output_off: 'true',
			}
		});
	}


	document.getElementById('show_version').onclick = function(){
		post_command({
			alert_text : 'バージョンを表示します。',
			mode : 'system_command',
			data: {
				command : 'git log -1',
				log_output_off: 'true',
			}
		});
	}


	let xhr = new XMLHttpRequest();
	function post_command(command_param) {
		alert(command_param.alert_text);

		const xhr = new XMLHttpRequest();
		xhr.open('POST', '/command');
		xhr.setRequestHeader("Content-Type", "application/json");
		xhr.responseType = 'text';

		xhr.onreadystatechange = function(){
			if(xhr.readyState === XMLHttpRequest.DONE) {
				// XMLデータ取得
				let data = JSON.parse(xhr.responseText);
				//alert(data);
				//data = data.replace(/\n/g, "<BR />");
				try {
					document.getElementById("resXmlHttpRequestObj").innerHTML=`<pre>${JSON.stringify(data,null," ")}</pre>`;
				} catch (err) {
					document.getElementById("resXmlHttpRequestObj").innerHTML=`<pre>${JSON.stringify(err,null," ")}</pre>`;
				}
			}
		}
		xhr.send(JSON.stringify(command_param));
	}
	
</script>
